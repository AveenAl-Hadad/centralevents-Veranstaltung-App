@page "/customer"
@using CentralEvents.Web.App.Wrappers
@using CentralEvent.Business.Contracts.Models
@inject IHttpClient Client

<h3>Registrieren</h3>
<h4><label id="fehlermeldung">@Fehlermeldung</label></h4>
<h4><label id="registriert">@Registriert</label></h4>


<p>
    <label>* Pflichtangaben</label>
</p>
<table>
    <tr>
        <td>
            <label>* Benutzername:</label>
            <input @bind="@customerModel.Benutzername" type="text" name="benutzer" placeholder="Bitte Benutzername eingeben" required/>
        </td>
    </tr>
    <tr>
        <td>
            <label>Vorname:</label>
            <input @bind="@customerModel.Vorname"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>Nachname:</label>
            <input @bind="@customerModel.Nachname"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>Straße:</label>
            <input @bind="@customerModel.Strasse"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>Hausnummer:</label>
            <input @bind="@customerModel.Hausnummer"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>PLZ:</label>
            <input @bind="@customerModel.Plz"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>Ort:</label>
            <input @bind="@customerModel.Ort"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>Telefonnummer:</label>
            <input type="tel" @bind="@customerModel.Telefon"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>* E-Mail:</label>
            <input type="email" @bind="@customerModel.Email" placeholder="Bitte E-Mail eingeben" required/>
        </td>
    </tr>
    <tr>
        <td>
            <label>* Passwort:</label>
            <input type="password" @bind="@customerModel.Passwort" placeholder="Bitte Passwort eingeben"/>
        </td>
    </tr>
    <tr>
        <td>
            <label>* Passwort wiederholen:</label>
            <input type="password" @bind="PasswortCheck" placeholder="Bitte Passwort eingeben"/>
        </td>
    </tr>
    <tr>
        <td>
            <a id="buttons" href="/">Abbrechen</a>
        </td>
    </tr>
    <tr>
        <td>
            <button @onclick="RegisterCustomer">Registrieren</button>
        </td>
    </tr>

</table>

@code
{
    [Parameter]
    public string Id { get; set; }

    public string Fehlermeldung { get; set; }
    public string Registriert { get; set; }

    public string NeuerBenutzername { get; set; }
    public string NeueEmail { get; set; }
    public string PasswortCheck { get; set; }

    public bool CheckBenutzername;
    public bool CheckEmail;
    public bool CheckPasswort;

    readonly CustomerModel customerModel = new CustomerModel();
    private IEnumerable<CustomerModel> customers = new CustomerModel[0];

    private async Task AddCheckBenutzername()
    {
        customers = await Client.GetJsonAsync<IEnumerable<CustomerModel>>("api/customer/getAll");

        bool result = false;

        foreach (CustomerModel model in customers)
        {
            if (result == false)
            {
                result = customerModel.Benutzername == model.Benutzername;
            }
        }

        if (!result)
        {
            CheckBenutzername = true;
        }
        else
        {
            Registriert = "";
            Fehlermeldung = "Benutzername existiert bereits";
            NeuerBenutzername = customerModel.Benutzername;
        }
    }

    private async Task AddCheckEmail()
    {
        customers = await Client.GetJsonAsync<IEnumerable<CustomerModel>>("api/customer/getAll");

        bool result = false;

        foreach (CustomerModel model in customers)
        {
            if (result == false)
            {
                result = customerModel.Email == model.Email;
            }
        }

        if (!result)
        {
            CheckEmail = true;
        }
        else
        {
            Registriert = "";
            Fehlermeldung = "Email existiert bereits";
            NeueEmail = customerModel.Email;
        }
    }

    private async Task AddCheckPasswort()
    {
        CheckPasswort = false;
        if (customerModel.Passwort == PasswortCheck)
        {
            CheckPasswort = true;
        }
        else
        {
            Registriert = "";
            Fehlermeldung = "Bitte geben sie das identische Passwort ein!";
            PasswortCheck = customerModel.Passwort;
        }
    }

    private async Task RegisterCustomer()
    {
        Fehlermeldung = "";
        Registriert = "";

        await AddCheckBenutzername();
        await AddCheckEmail();
        await AddCheckPasswort();

        if (CheckBenutzername && CheckEmail && CheckPasswort)
        {
            await AddKunde();
            Registriert = "Sie haben sich erfolgreich registriert";
        }
    }

    private async Task AddKunde()
    {
        await Client.PostAsync("api/customer/add", customerModel);
    }
}