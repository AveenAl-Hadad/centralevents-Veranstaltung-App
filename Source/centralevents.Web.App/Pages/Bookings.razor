@page "/bookings/{id}"
@using CentralEvents.Web.App.Wrappers
@using CentralEvent.Business.Contracts.Models
@inject IHttpClient Client

<h3>Veranstaltung reservieren</h3>

<h2>@eventModel.Name</h2>
<h5>@eventModel.Restbestand Tickets von @eventModel.GesamtanzahlEintrittskarten verfügbar</h5>

<p>
    <label>* Pflichtangaben</label>
</p>

<form>
    <table>
        <tr>
            <td>
                <label>Ticketanzahl</label>
                <input @bind="@bookingModel.AnzahlTickets" type="number" min="1"/>
                @* Wie komm ich an die entweder php-Werte im Code, oder gibts da cooles seitenübergreifendes binding zeug? *@
                @*<input type="number" name="amount" id="amount" value="'.$ticket_amount.'" min="1" />*@

            </td>
        </tr>
        <tr>
            <td>
                <label>Vorname*:</label>
                <input @bind="@bookingModel.Vorname" required/>
            </td>
        </tr>
        <tr>
            <td>
                <label>Nachname*:</label>
                <input @bind="@bookingModel.Nachname" required/>
            </td>
        </tr>
        <tr>
            <td>
                <label>Straße / Nr.*:</label>
                <input @bind="@bookingModel.Strasse" required/>
            </td>
        </tr>
        <tr>
            <td>
                <label>Hausnummer:</label>
                <input @bind="@bookingModel.Hausnummer"/>
            </td>
        </tr>
        <tr>
            <td>
                <label>PLZ*:</label>
                <input @bind="@bookingModel.Plz" required/>
            </td>
        </tr>
        <tr>
            <td>
                <label>Ort*:</label>
                <input @bind="@bookingModel.Ort" required/>
            </td>
        </tr>
        <tr>
            <td>
                <label>
                    E-Mail*:
                </label>
                <input type="email" name="email" @bind="@bookingModel.Email" required/>
            </td>
        </tr>
        <tr>
            <td>
                <label>
                    Telefonnummer:
                </label>
                <input type="tel" name="Telefonnummer" placeholder="0421-123456" @bind="@bookingModel.Telefon"/>
            </td>
        </tr>
        <tr>
            <td >
                <a id="buttons" href="/">Abbrechen</a>
            </td>
            <td></td>
        </tr>
        <tr>
            <td >
                <button @onclick="AddBooking">Karten reservieren</button>
            </td>
        </tr>
    </table>
</form>


@code
{

    [Parameter]
    public string Id { get; set; }

    EventModel eventModel = new EventModel();
    BookingModel bookingModel = new BookingModel();

    public string MessageOverbooking { get; set; } // nächstes mal Properties ohne Semikolon ;P

    protected override async Task OnInitializedAsync()
    {
        eventModel = await Client.GetJsonAsync<EventModel>($"api/event/get/{Id}");
    }

    private async Task AddBooking()
    {
        await UpdateEvent();

        bookingModel.EventName = eventModel.Name;

        await Client.PostAsync("api/booking/add", bookingModel);
    }

    private async Task UpdateEvent()
    {
        eventModel.Restbestand = eventModel.Restbestand - bookingModel.AnzahlTickets;

        await Client.PutAsync("api/event/update", eventModel);

        eventModel = await Client.GetJsonAsync<EventModel>($"api/event/get/{Id}");
    }

    private async Task CheckOverBooking()
    {
        eventModel = await Client.GetJsonAsync<EventModel>($"api/eventControl/getEvent/{Id}");
        if (eventModel.Restbestand >= bookingModel.AnzahlTickets)
        {
            MessageOverbooking = "Gebucht";
            await AddBooking(); // und hier nich das await vergessen, wette das is die nicht aktuelle zahl....ihr wartet nicht auf das ende der funktion, sondern
                                // geht asyncron am aufruf(synchron) vorbei und manchmal zeigt man dann schneller das ergebnis an, bevor die methode gearbeitet hat und noch garnich gebucht hat.
                                // is alles richtig, nur die zahl is noch die alte, weil ihr schneller guggt als gebucht wurde, weil auf durchführung nicht gewartet wurde.
                                // oder ich klugscheisser nur und es geht immrnoch nich =))
        }
        else
        {
            MessageOverbooking = "Es sind nicht mehr so viele Tickets buchbar.";
        }
    }
}