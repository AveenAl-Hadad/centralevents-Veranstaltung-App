@using CentralEvents.Web.App.ServiceComponents
@using CentralEvents.Web.App.Wrappers
@using Newtonsoft.Json
@using RestSharp
@using System.Net
@inherits LayoutComponentBase
@inject IJSRuntime JsRuntime
@*@inject ServiceComponent Service*@
@inject IServiceComponent Service
@inject IHttpClient Client


<div>
    <header class="head">
        <a href="/">
            <img src="css/Images/ce_logo.png"/>
        </a>
        <br/>
        <table id="login">
            <tr>
                <td>
                    <input type="text" placeholder="Benutzername" @bind="@UserId" required/> @*Benutzername einbinden*@
                </td>
            </tr>
            <tr>
                <td>
                    <input type="password" placeholder="Passwort" @bind="@Passwort" required/> @*Passwort einbinden*@
                </td>
            </tr>
            <tr>
                @* <td id="buttons"> *@
                @*     <a href="/">Login: <img src="css/Images/login.png" height="12" width="16" /></a> $1$Login einbinden #1# *@
                @* </td> *@
                <td>

                    <button @onclick="@CreateToken">Login</button>
                    <button @onclick="@PostMethod">Post</button>
                    <button @onclick="@Test">Test</button>
                    <button @onclick="@Login2">Login2</button>
                </td>
            </tr>
            @*<tr>
                <td>

                </td>
            </tr>*@
            <tr>
                <td id="buttons">
                    <a href="customer">Registrieren</a> @*weiterleiten auf Registireren Seite*@
                </td>
            </tr>
        </table>
        <label>Bearer: @Bearer</label>
        <br/>
        <label>Nachricht: @Message</label>
    </header>
    <div>
        @Body
    </div>

    <footer>
        <p>
            <label>Adresse:</label>
            <br/>
            <label>CentralEvents</label>
            <br/>
            <label>CentralEvents-Straße 1</label>
            <br/>
            <label>28111 Metro-Stadt</label>
            <br/>
            <label>tickets@centralevents.de</label>
            <br/>
            <label>0555-123456789</label>
        </p>
    </footer>
</div>

@code{

    [Parameter]
    public string UserId { get; set; } = "ceUser";

    [Parameter]
    public string Passwort { get; set; } = "xxx";

    public string Message { get; set; }

    //public CustomerModel customModel = new CustomerModel();

    [Parameter]
    public string Bearer { get; set; }

    public async Task CreateToken()
    {
        Message = "";
        Bearer = "";

        // 54865 APP Port
        var response = await Service.ResponseJsonOrig("http://localhost:54768/api/security/login?userId=" + UserId + "&pass=" + Passwort + "", null, null, null, Method.GET);

        //customModel.Benutzername = UserId;
        //customModel.Passwort = Passwort;
        //IRestResponse response = this.Client.PostAsync()
        //IRestResponse response = await Client.GetJsonAsync<IRestResponse>("")
        //await Client.PostJsonAsync("api/loginControl/login", customModel);
        //await Client.PostAsync("api/eventControl/addBooking", customModel);

        if (response.StatusCode == HttpStatusCode.OK)
        {
            string json = JsonConvert.DeserializeObject<Dictionary<string, string>>(response.Content)["token"];

            Bearer = json;
            Message = "Create Token Success: " + response.StatusCode;
        }
        else
        {
            Message = "Create Token Error: " + response.StatusCode;
        }
    }

    public async Task PostMethod()
    {
        Message = "";
        Dictionary<string, string> header = new Dictionary<string, string>();
        header.Add("Authorization", "Bearer" + " " + Bearer);
        string value = Guid.NewGuid().ToString();

        // 54768 ist API Port
        var response = await Service.ResponseJsonAuth("http://localhost:54768/api/security/auth", value, header, Method.GET);
        //IRestResponse response = await Service.ResponseJsonAuth("http://localhost:54768/api/security/auth", value, header, Method.POST);

        if (response.StatusCode == HttpStatusCode.OK)
        {
            Message = "Post Success: " + response.StatusCode;
        }
        else
        {
            Message = "Post Error: " + response.StatusCode;
        }
    }

    public async Task Login2()
    {
        Message = "";
        Dictionary<string, string> header = new Dictionary<string, string>();
        header.Add("Authorization", "Bearer" + " " + Bearer);
        string value = Guid.NewGuid().ToString();

        var response = await Service.ResponseJsonAuth("http://localhost:54768/api/security/login2", null, header, Method.GET);
        //var response = await Client..GetAsync($"api/security/login2/{UserId}/{Passwort}");

        if (response.StatusCode == HttpStatusCode.OK)
        {
            string json = JsonConvert.DeserializeObject<Dictionary<string, string>>(response.Content.ToString())["token"];

            Bearer = json;
            Message = "Create Token Success: " + response.StatusCode;
        }
        else
        {
            Message = "Create Token Error: " + response.StatusCode;
        }
    }

    public async Task Test()
    {
        Message = "";
        Dictionary<string, string> header = new Dictionary<string, string>();
        header.Add("Authorization", "Bearer" + " " + Bearer);
        string value = Guid.NewGuid().ToString();

        var response = await Service.ResponseJsonAuth("http://localhost:54768/api/security/auth2", null, header, Method.GET);

        if (response.StatusCode == HttpStatusCode.OK)
        {
            Message = "Test Success: " + response.StatusCode;
        }
        else
        {
            Message = "Test Error: " + response.StatusCode;
        }
    }
}